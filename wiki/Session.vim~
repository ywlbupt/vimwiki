let SessionLoad = 1
if &cp | set nocp | endif
let s:cpo_save=&cpo
set cpo&vim
map! <S-Insert> <MiddleMouse>
nmap  h
nmap <NL> j
nmap  k
nmap  l
nnoremap   @=((foldclosed(line('.')) < 0) ? 'zc' : 'zo')
vnoremap <silent> # y?=substitute(escape(@", '.*\\/[]'), "\n", '\\n', 'g')
vnoremap <silent> * y/=substitute(escape(@", '.*\\/[]'), "\n", '\\n', 'g')
nmap <silent> ,n <Plug>MarkClear
vmap <silent> ,r <Plug>MarkRegex
nmap <silent> ,r <Plug>MarkRegex
vmap <silent> ,m <Plug>MarkSet
nmap <silent> ,m <Plug>MarkSet
map ,rwp <Plug>RestoreWinPosn
map ,swp <Plug>SaveWinPosn
nmap ,caL <Plug>CalendarH
nmap ,cal <Plug>CalendarV
nmap ,ihn :IHN
nmap ,is :IHS:A
nmap ,ih :IHS
vmap <silent> ,tt :call AlignMaps#Vis("tt")
nmap ,tt <Plug>AM_tt
vmap <silent> ,tsq :call AlignMaps#Vis("tsq")
nmap ,tsq <Plug>AM_tsq
vmap <silent> ,tsp :call AlignMaps#Vis("tsp")
nmap ,tsp <Plug>AM_tsp
vmap <silent> ,tml :call AlignMaps#Vis("tml")
nmap ,tml <Plug>AM_tml
vmap <silent> ,tab :call AlignMaps#Vis("tab")
nmap ,tab <Plug>AM_tab
vmap <silent> ,m= :call AlignMaps#Vis("m=")
nmap ,m= <Plug>AM_m=
vmap <silent> ,tW@ :call AlignMaps#Vis("tW@")
nmap ,tW@ <Plug>AM_tW@
vmap <silent> ,t@ :call AlignMaps#Vis("t@")
nmap ,t@ <Plug>AM_t@
vmap <silent> ,t~ :call AlignMaps#Vis("t~")
nmap ,t~ <Plug>AM_t~
vmap <silent> ,t? :call AlignMaps#Vis("t?")
nmap ,t? <Plug>AM_t?
vmap <silent> ,w= :call AlignMaps#Vis("w=")
nmap ,w= <Plug>AM_w=
vmap <silent> ,ts= :call AlignMaps#Vis("ts=")
nmap ,ts= <Plug>AM_ts=
vmap <silent> ,ts< :call AlignMaps#Vis("ts<")
nmap ,ts< <Plug>AM_ts<
vmap <silent> ,ts; :call AlignMaps#Vis("ts;")
nmap ,ts; <Plug>AM_ts;
vmap <silent> ,ts: :call AlignMaps#Vis("ts:")
nmap ,ts: <Plug>AM_ts:
vmap <silent> ,ts, :call AlignMaps#Vis("ts,")
nmap ,ts, <Plug>AM_ts,
vmap <silent> ,t= :call AlignMaps#Vis("t=")
nmap ,t= <Plug>AM_t=
vmap <silent> ,t< :call AlignMaps#Vis("t<")
nmap ,t< <Plug>AM_t<
vmap <silent> ,t; :call AlignMaps#Vis("t;")
nmap ,t; <Plug>AM_t;
vmap <silent> ,t: :call AlignMaps#Vis("t:")
nmap ,t: <Plug>AM_t:
vmap <silent> ,t, :call AlignMaps#Vis("t,")
nmap ,t, <Plug>AM_t,
vmap <silent> ,t# :call AlignMaps#Vis("t#")
nmap ,t# <Plug>AM_t#
vmap <silent> ,t| :call AlignMaps#Vis("t|")
nmap ,t| <Plug>AM_t|
vmap <silent> ,T~ :call AlignMaps#Vis("T~")
nmap ,T~ <Plug>AM_T~
vmap <silent> ,Tsp :call AlignMaps#Vis("Tsp")
nmap ,Tsp <Plug>AM_Tsp
vmap <silent> ,Tab :call AlignMaps#Vis("Tab")
nmap ,Tab <Plug>AM_Tab
vmap <silent> ,TW@ :call AlignMaps#Vis("TW@")
nmap ,TW@ <Plug>AM_TW@
vmap <silent> ,T@ :call AlignMaps#Vis("T@")
nmap ,T@ <Plug>AM_T@
vmap <silent> ,T? :call AlignMaps#Vis("T?")
nmap ,T? <Plug>AM_T?
vmap <silent> ,T= :call AlignMaps#Vis("T=")
nmap ,T= <Plug>AM_T=
vmap <silent> ,T< :call AlignMaps#Vis("T<")
nmap ,T< <Plug>AM_T<
vmap <silent> ,T; :call AlignMaps#Vis("T;")
nmap ,T; <Plug>AM_T;
vmap <silent> ,T: :call AlignMaps#Vis("T:")
nmap ,T: <Plug>AM_T:
vmap <silent> ,Ts, :call AlignMaps#Vis("Ts,")
nmap ,Ts, <Plug>AM_Ts,
vmap <silent> ,T, :call AlignMaps#Vis("T,")
nmap ,T, <Plug>AM_T,
vmap <silent> ,T# :call AlignMaps#Vis("T#")
nmap ,T# <Plug>AM_T#
vmap <silent> ,T| :call AlignMaps#Vis("T|")
nmap ,T| <Plug>AM_T|
map ,Htd <Plug>AM_Htd
vmap <silent> ,anum :call AlignMaps#Vis("anum")
nmap ,anum <Plug>AM_anum
vmap <silent> ,aenum :call AlignMaps#Vis("aenum")
nmap ,aenum <Plug>AM_aenum
vmap <silent> ,aunum :call AlignMaps#Vis("aunum")
nmap ,aunum <Plug>AM_aunum
vmap <silent> ,afnc :call AlignMaps#Vis("afnc")
nmap ,afnc <Plug>AM_afnc
vmap <silent> ,adef :call AlignMaps#Vis("adef")
nmap ,adef <Plug>AM_adef
vmap <silent> ,adec :call AlignMaps#Vis("adec")
nmap ,adec <Plug>AM_adec
vmap <silent> ,ascom :call AlignMaps#Vis("ascom")
nmap ,ascom <Plug>AM_ascom
vmap <silent> ,aocom :call AlignMaps#Vis("aocom")
nmap ,aocom <Plug>AM_aocom
vmap <silent> ,adcom :call AlignMaps#Vis("adcom")
nmap ,adcom <Plug>AM_adcom
vmap <silent> ,acom :call AlignMaps#Vis("acom")
nmap ,acom <Plug>AM_acom
vmap <silent> ,abox :call AlignMaps#Vis("abox")
nmap ,abox <Plug>AM_abox
vmap <silent> ,a( :call AlignMaps#Vis("a(")
nmap ,a( <Plug>AM_a(
vmap <silent> ,a= :call AlignMaps#Vis("a=")
nmap ,a= <Plug>AM_a=
vmap <silent> ,a< :call AlignMaps#Vis("a<")
nmap ,a< <Plug>AM_a<
vmap <silent> ,a, :call AlignMaps#Vis("a,")
nmap ,a, <Plug>AM_a,
vmap <silent> ,a? :call AlignMaps#Vis("a?")
nmap ,a? <Plug>AM_a?
nmap <silent> ,w,t <Plug>VimwikiTabMakeDiaryNote
nmap <silent> ,w,w <Plug>VimwikiMakeDiaryNote
nmap <silent> ,w,i <Plug>VimwikiDiaryGenerateLinks
nmap <silent> ,wi <Plug>VimwikiDiaryIndex
nmap <silent> ,ws <Plug>VimwikiUISelect
nmap <silent> ,wt <Plug>VimwikiTabIndex
nmap <silent> ,ww <Plug>VimwikiIndex
nmap <silent> ,wm :WMToggle
map ,ff :call Search_Word():copen
nmap <silent> ,fe :Explore!
noremap ,tl :TlistToggle
map ,do <Plug>VimwikiToggleListItem
map ,dd <Plug>VimwikiDeleteLink 
map <silent> ,er :e ~/.vimrc
map <silent> ,ee :e ~/Dropbox/_vimrc
map ,rr <Plug>VimwikiRenameLink
map <silent> ,ss :source ~/Dropbox/_vimrc
imap Ã« <Up>
imap Ãª <Down>
imap Ã¬ <Right>
imap Ã¨ <Left>
xmap S <Plug>VSurround
nmap cs <Plug>Csurround
nmap ds <Plug>Dsurround
xmap gS <Plug>VgSurround
nmap gx <Plug>NetrwBrowseX
nmap ySS <Plug>YSsurround
nmap ySs <Plug>YSsurround
nmap yss <Plug>Yssurround
nmap yS <Plug>YSurround
nmap ys <Plug>Ysurround
nnoremap <silent> <Plug>SurroundRepeat .
nmap <silent> <Plug>RestoreWinPosn :call RestoreWinPosn()
nmap <silent> <Plug>SaveWinPosn :call SaveWinPosn()
nnoremap <silent> <Plug>CalendarH :cal calendar#show(1)
nnoremap <silent> <Plug>CalendarV :cal calendar#show(0)
nmap <SNR>27_WE <Plug>AlignMapsWrapperEnd
map <SNR>27_WS <Plug>AlignMapsWrapperStart
nnoremap <silent> <Plug>NetrwBrowseX :call netrw#NetrwBrowseX(expand("<cWORD>"),0)
map <silent> <F7> :call Run()
map <silent> <F5> :call Complie()
map <silent> <C-F5> :call ComplieRunGpp()
nmap <M-F11> :ccl
nmap <F11> :cw 10
nnoremap <silent> <F3> :Grep
map <F2> :Vimwiki2HTML
map <S-F2> :VimwikiAll2HTML
map <S-F4> :call RunmeCmdRead()
map <F4> :call RunmeCmd()
noremap <S-CR> Oj
nnoremap <C-S-Tab> :tabprev
nnoremap <C-Tab> :tabnext
map <S-Insert> <MiddleMouse>
imap S <Plug>ISurround
imap s <Plug>Isurround
inoremap <expr>  pumvisible()?"\":"\"
imap  <Plug>Isurround
inoremap <expr>  pumvisible()?"\":"\"
imap ,ihn :IHN
imap ,is :IHS:A
imap ,ih :IHS
nnoremap Â¶ 6gt
nnoremap Âµ 5gt
nnoremap Â´ 4gt
nnoremap Â³ 3gt
nnoremap Â² 2gt
nnoremap Â± 1gt
nnoremap Ã± :q
noremap Ã· :tabclose
nnoremap Ã´ :tabnew
nnoremap Ã¦  
nnoremap Ã¤ 
iabbr ydate =strftime("%Y-%m-%d")
iabbr tdate =strftime("%Y/%m/%d %H:%M:%S")
let &cpo=s:cpo_save
unlet s:cpo_save
set autochdir
set autoread
set autowriteall
set background=dark
set backspace=indent,eol,start
set backupcopy=yes
set fileencodings=utf-8,usc-bom,euc-jp,gb18030,gbk,gb2312,cp936
set foldopen=block,hor,mark,percent,quickfix,tag
set guioptions=aegirLt
set helplang=en
set hidden
set hlsearch
set ignorecase
set incsearch
set iskeyword=@,48-57,_,192-255,_,$,@,%,#,-
set langmenu=zh_CN.UTF-8
set laststatus=2
set mouse=a
set printoptions=paper:a4
set ruler
set runtimepath=/usr/share/vim/vimfiles,/usr/share/vim/vim73,/usr/share/vim/vimfiles/after,~/vimfiles,~/vimfiles/after,~/Dropbox/vimfiles
set shiftwidth=4
set showcmd
set smartcase
set smartindent
set softtabstop=4
set statusline=%F%m%r%h%w[POS=%l,%v][%p%%]%{strftime(\"%d/%m/%y\ -\ %H:%M\")}
set suffixes=.bak,~,.swp,.o,.info,.aux,.log,.dvi,.bbl,.blg,.brf,.cb,.ind,.idx,.ilg,.inx,.out,.toc
set tabstop=4
set tags=.tags,C:Prog~sVimvimfilestagsstl_tags,C:Prog~sVimvim72tagscpp_srctags,C:Prog~sVim
set termencoding=utf-8
set visualbell
set winaltkeys=no
set window=34
set nowrapscan
let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0
let v:this_session=expand("<sfile>:p")
silent only
cd ~/Dropbox/vimwiki/wiki
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
set shortmess=aoO
badd +0 ~/Dropbox/vimwiki/wiki/index.wiki
silent! argdel *
edit ~/Dropbox/vimwiki/wiki/index.wiki
set splitbelow splitright
set nosplitbelow
set nosplitright
wincmd t
set winheight=1 winwidth=1
argglobal
let s:cpo_save=&cpo
set cpo&vim
inoremap <buffer> <expr> <S-Tab> vimwiki#tbl#kbd_shift_tab()
nmap <buffer> <silent> 	 <Plug>VimwikiNextLink
vmap <buffer> <silent>  <Plug>VimwikiNormalizeLinkVisualCR
nmap <buffer> <silent>  <Plug>VimwikiFollowLink
vmap <buffer> <silent> + <Plug>VimwikiNormalizeLinkVisual
nmap <buffer> <silent> + <Plug>VimwikiNormalizeLink
nmap <buffer> ,whh <Plug>Vimwiki2HTMLBrowse
nmap <buffer> ,wh <Plug>Vimwiki2HTML
nmap <buffer> <silent> - <Plug>VimwikiRemoveHeaderLevel
nmap <buffer> <silent> <D-CR> <Plug>VimwikiTabnewLink
nmap <buffer> <silent> = <Plug>VimwikiAddHeaderLevel
nnoremap <buffer> O :call vimwiki#lst#kbd_oO('O')
vnoremap <buffer> <silent> ac :call vimwiki#base#TO_table_col(0, 1)
onoremap <buffer> <silent> ac :call vimwiki#base#TO_table_col(0, 0)
vnoremap <buffer> <silent> a\ :call vimwiki#base#TO_table_cell(0, 1)
onoremap <buffer> <silent> a\ :call vimwiki#base#TO_table_cell(0, 0)
vnoremap <buffer> <silent> ah :call vimwiki#base#TO_header(0, 1)
onoremap <buffer> <silent> ah :call vimwiki#base#TO_header(0, 0)
nnoremap <buffer> gww :VimwikiTableAlignW
nnoremap <buffer> gqq :VimwikiTableAlignQ
nnoremap <buffer> gl3 :VimwikiListChangeLevel #
nnoremap <buffer> gl# :VimwikiListChangeLevel #
nnoremap <buffer> gl- :VimwikiListChangeLevel -
nnoremap <buffer> gl8 :VimwikiListChangeLevel *
nnoremap <buffer> gl* :VimwikiListChangeLevel *
nnoremap <buffer> glm :VimwikiListChangeLevel >>
nnoremap <buffer> gll :VimwikiListChangeLevel <<
vnoremap <buffer> <silent> ic :call vimwiki#base#TO_table_col(1, 1)
onoremap <buffer> <silent> ic :call vimwiki#base#TO_table_col(1, 0)
vnoremap <buffer> <silent> i\ :call vimwiki#base#TO_table_cell(1, 1)
onoremap <buffer> <silent> i\ :call vimwiki#base#TO_table_cell(1, 0)
vnoremap <buffer> <silent> ih :call vimwiki#base#TO_header(1, 1)
onoremap <buffer> <silent> ih :call vimwiki#base#TO_header(1, 0)
nnoremap <buffer> o :call vimwiki#lst#kbd_oO('o')
nnoremap <buffer> <silent> <Plug>VimwikiRemoveHeaderLevel :call vimwiki#base#RemoveHeaderLevel()
nnoremap <buffer> <silent> <Plug>VimwikiAddHeaderLevel :call vimwiki#base#AddHeaderLevel()
nmap <buffer> <silent> <M-Right> <Plug>VimwikiTableMoveColumnRight
nmap <buffer> <silent> <M-Left> <Plug>VimwikiTableMoveColumnLeft
nmap <buffer> <silent> <C-Up> <Plug>VimwikiDiaryPrevDay
nmap <buffer> <silent> <C-Down> <Plug>VimwikiDiaryNextDay
nmap <buffer> <silent> <S-Tab> <Plug>VimwikiPrevLink
nmap <buffer> <silent> <BS> <Plug>VimwikiGoBackLink
nmap <buffer> <silent> <C-S-CR> <Plug>VimwikiTabnewLink
nmap <buffer> <silent> <C-CR> <Plug>VimwikiVSplitLink
nmap <buffer> <silent> <S-CR> <Plug>VimwikiSplitLink
nnoremap <buffer> <silent> <RightMouse><LeftMouse> :VimwikiGoBackLink
nnoremap <buffer> <silent> <C-2-LeftMouse> <LeftMouse>:VimwikiVSplitLink
nnoremap <buffer> <silent> <S-2-LeftMouse> <LeftMouse>:VimwikiSplitLink
nnoremap <buffer> <silent> <2-LeftMouse> :call vimwiki#base#follow_link("nosplit", "\<2-LeftMouse>")
nmap <buffer> <C-LeftMouse> <Nop>
nmap <buffer> <S-LeftMouse> <Nop>
inoremap <buffer> <expr> 	 vimwiki#tbl#kbd_tab()
let &cpo=s:cpo_save
unlet s:cpo_save
setlocal keymap=
setlocal noarabic
setlocal noautoindent
setlocal balloonexpr=
setlocal nobinary
setlocal bufhidden=
setlocal buflisted
setlocal buftype=
setlocal nocindent
setlocal cinkeys=0{,0},0),:,0#,!^F,o,O,e
setlocal cinoptions=
setlocal cinwords=if,else,while,do,for,switch
set colorcolumn=81
setlocal colorcolumn=81
setlocal comments=b:*,b:#,b:-
setlocal commentstring=%%%s
setlocal complete=.,w,b,u,t,i
setlocal concealcursor=
set conceallevel=2
setlocal conceallevel=2
setlocal completefunc=
setlocal nocopyindent
setlocal cryptmethod=
setlocal nocursorbind
setlocal nocursorcolumn
set cursorline
setlocal cursorline
setlocal define=
setlocal dictionary=
setlocal nodiff
setlocal equalprg=
setlocal errorformat=
setlocal noexpandtab
if &filetype != 'vimwiki'
setlocal filetype=vimwiki
endif
setlocal foldcolumn=0
setlocal nofoldenable
setlocal foldexpr=VimwikiFoldLevel(v:lnum)
setlocal foldignore=#
set foldlevel=9999
setlocal foldlevel=9999
setlocal foldmarker={{{,}}}
set foldmethod=syntax
setlocal foldmethod=expr
setlocal foldminlines=1
setlocal foldnestmax=20
setlocal foldtext=VimwikiFoldText()
setlocal formatexpr=
setlocal formatoptions=tnro
setlocal formatlistpat=^\\s*[*#-]\\s*
setlocal grepprg=
setlocal iminsert=2
setlocal imsearch=2
setlocal include=
setlocal includeexpr=
setlocal indentexpr=
setlocal indentkeys=0{,0},:,0#,!^F,o,O,e
setlocal noinfercase
setlocal iskeyword=@,48-57,_,192-255,_,$,@,%,#,-
setlocal keywordprg=
setlocal nolinebreak
setlocal nolisp
setlocal nolist
setlocal makeprg=
setlocal matchpairs=(:),{:},[:]
setlocal modeline
setlocal modifiable
setlocal nrformats=octal,hex
set number
setlocal number
setlocal numberwidth=4
setlocal omnifunc=
setlocal path=
setlocal nopreserveindent
setlocal nopreviewwindow
setlocal quoteescape=\\
setlocal noreadonly
setlocal norelativenumber
setlocal norightleft
setlocal rightleftcmd=search
setlocal noscrollbind
setlocal shiftwidth=4
setlocal noshortname
setlocal smartindent
setlocal softtabstop=4
setlocal nospell
setlocal spellcapcheck=[.?!]\\_[\\])'\"\	\ ]\\+
setlocal spellfile=
setlocal spelllang=en
setlocal statusline=
setlocal suffixesadd=.wiki
setlocal swapfile
setlocal synmaxcol=3000
if &syntax != 'vimwiki'
setlocal syntax=vimwiki
endif
setlocal tabstop=4
setlocal tags=
setlocal textwidth=0
setlocal thesaurus=
setlocal noundofile
setlocal nowinfixheight
setlocal nowinfixwidth
setlocal wrap
setlocal wrapmargin=0
let s:l = 26 - ((25 * winheight(0) + 16) / 33)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
26
normal! 0
tabnext 1
if exists('s:wipebuf')
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20 shortmess=filnxtToO
let s:sx = expand("<sfile>:p:r")."x.vim"
if file_readable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &so = s:so_save | let &siso = s:siso_save
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
